{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/lifecycle.js","../../src/init.js","../../src/render.js","../../src/index.js"],"sourcesContent":["\r\n/**\r\n * \r\n * @param {*} data 当前数据是不是对象\r\n */\r\nexport function isObject(data) {\r\n    return typeof data === 'object' && data !== null;\r\n}\r\n\r\n\r\nexport function proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function def(data,key,value){\r\n    Object.defineProperty(data,key,{\r\n        enumerable:false,\r\n        configurable:false,\r\n        value\r\n    })\r\n}","// 重写数组的七个方法  push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n\r\n\r\nlet oldArrayMethods = Array.prototype;\r\n\r\n// value.__proto__== arrayMethods 原型链查找的问题  会向上查找 先查找我重写的 重写的没有会继续向上查找\r\n\r\n// arrayMethods.__proto__ = oldArrayMethods\r\n\r\nexport const arrayMethods = Object.create(oldArrayMethods)\r\n\r\n\r\nconst methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'reverse',\r\n    'sort',\r\n    'splice',\r\n\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function(...args){\r\n        // console.log('用户调用了push 方法') //AOP切片编程\r\n\r\n        const result = oldArrayMethods[method].apply(this,args) // 调用原生的数组方法\r\n        // push unshift 添加的元素可能还是一个对象\r\n        let inserted;// 当前用户插入的元素\r\n        let ob = this.__ob__;\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n              inserted = args;\r\n              break;\r\n            case 'splice': // 3个 新增的属性 splice 有删除 有新增的功能 arr.splice(0,1,{name:1})\r\n                inserted = args.slice(2)\r\n                break;\r\n            default:\r\n                break;            \r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted) // 将新增属性继续观测\r\n            \r\n        }\r\n        return result\r\n    }\r\n})","// 把data中的数据 都使用Object.defineProperty重新定义es5\r\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\r\nimport {isObject,def} from '../util/index'\r\nimport {arrayMethods} from './array'\r\nclass Observer{\r\n    constructor(value){\r\n        // vue 如果数据的层次过多 需要递归的去解析对象中的属性 依次增加set和get方法\r\n        // value.__ob__= this // 我给每一个监控的对象都增加一个__ob__属性\r\n          // 防止 __ob__ 被修改 遍历 \r\n        //   Object.defineProperty(value,'__ob__',{\r\n        //     enumerable:false,\r\n        //     configurable:false,\r\n        //     value:this\r\n        // })\r\n        def(value,'__ob__',this)\r\n        if(Array.isArray(value)){\r\n            // 如果是数组的话并不会 对索引进行观测 因为会导致性能问题\r\n            // 前端开发中很少很少 去操作索引 push shift unshift\r\n              value.__proto__ = arrayMethods   // 给数组的原型重写方法 当访问数组方法的时候  会先访问自身的\r\n           \r\n            // 如果数组里放的是对象我再监控劫持\r\n            this.observeArray(value)\r\n\r\n        }else{\r\n            this.walk(value)\r\n        }\r\n    }\r\n    observeArray(value){\r\n        for(let i=0;i<value.length;i++){\r\n            observe(value[i])\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data)\r\n        for(let i=0;i<keys.length;i++){\r\n            let key = keys[i]\r\n            let value = data[key]\r\n            defineReactive(data,key,value) // 定义响应式数据\r\n        }\r\n    }\r\n}\r\n\r\nfunction defineReactive(data,key,value){\r\n    observe(value) // 递归实现深度检测\r\n    Object.defineProperty(data,key,{\r\n        get(){  // 获取值的时候做一些操作\r\n            return value;\r\n        },\r\n        set(newValue){  // 设值的时候做一些操作\r\n            if(newValue===value) return \r\n            observe(newValue) // 继续劫持用户设置的值  因为有可能用户设置的值是一个对象\r\n\r\n            value = newValue \r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n // console.log(data)\r\n    if(!isObject(data)){\r\n        return \r\n    }\r\n    return new Observer(data) // 用来观测数据\r\n\r\n\r\n}","import {observe} from './observe/index'\r\nimport {proxy} from './util/index'\r\nexport function initState(vm){\r\n    const opts = vm.$options\r\n    // vue的数据来源 属性 方法 数据 计算属性  watch\r\n    if(opts.props){\r\n        initProps(vm)\r\n    }\r\n    if(opts.methods){\r\n        initMethod(vm)\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch(vm)\r\n    }\r\n\r\n\r\n    console.log(vm)\r\n}\r\n\r\nfunction initProps(){\r\n\r\n}\r\nfunction initMethod(){\r\n\r\n}\r\n\r\nfunction initData(vm){\r\n    // 数据初始化工作\r\n    let data = vm.$options.data // 用户传递的data\r\n    //  vm._data 是为了 可以this._data 可以访问到值   data.call 是因为data 有可能是个函数  在函数里访问this时  可以访问到vue这个实例\r\n    data = vm._data = typeof data ==='function'?data.call(vm):data\r\n    // 对象劫持 用户改变了数据 我希望可以得到通知 =>刷新页面\r\n\r\n    // 为了让用户更好的使用 我希望可以直接vm.xxx\r\n    for(let key in data){\r\n        proxy(vm,'_data',key)\r\n    }\r\n\r\n    // MVVM模式 数据变化可以驱动视图变化\r\n    // Object.defineProperty() 给属性增加get方法 和set方法\r\n    observe(data) // 响应式原理\r\n    // console.log(data)\r\n\r\n}\r\nfunction initComputed(){\r\n\r\n}\r\nfunction initWatch(){\r\n\r\n}","// ast 语法树 使用对象来描述原生语法的  虚拟dom用对象来描述dom结构的\r\n// ?: 匹配不捕获\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  // 空格开头 />这样判断是否结束\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\nlet root = null ; // ast 语法树的树根\r\nlet currentParent; // 标识当前父亲是谁\r\n\r\nconst ELMENT_TYPE = 1 // 代表元素\r\nconst TEXT_TYPE = 3\r\nlet stack = []\r\n// 创建元素ast语法树\r\nfunction createASTElement(tagName,attrs){\r\n    return {\r\n        tag:tagName,\r\n        type:ELMENT_TYPE,\r\n        children:[],\r\n        attrs,\r\n        parent:null\r\n    }\r\n}\r\n\r\n\r\n// tagName 开始标签  attrs 属性\r\nfunction start(tagName,attrs){\r\n    // console.log('开始标签:',tagName,'属性是:',attrs)\r\n    // 遇到开始标签 就创建一个ast元素\r\n    let element = createASTElement(tagName,attrs)\r\n    if(!root){\r\n        root = element;\r\n    }\r\n    currentParent = element; // 把当前元素标记成父ast树\r\n    stack.push(element) // 将开始标签存放到栈中\r\n\r\n}\r\n// 文本\r\nfunction chars(text){\r\n    // console.log('文本:',text)\r\n    text = text.replace(/\\s/g,'');\r\n    if(text){\r\n        currentParent.children.push({\r\n            text,\r\n            type:TEXT_TYPE\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// 结束标签 <div><p></p></div>\r\nfunction end(tagName){\r\n    // console.log('结束标签',tagName)\r\n    let element = stack.pop()\r\n    // 我要标识当前这个p 是属于这个div儿子的\r\n    currentParent = stack[stack.length-1]\r\n    if(currentParent){\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element) // 实现了一个树的父子关系\r\n    }\r\n}\r\n\r\nexport function parseHTML(html) {\r\n\r\n    // 不停的去解析html字符串\r\n    while (html) {\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd === 0) {\r\n            // 如果当前索引为0 肯定是一个标签  开始标签 或者结束标签\r\n            let startTagMatch = parseStartTag() // 通过这个方法获取到的匹配的结果 tagName attrs\r\n\r\n            // 匹配开始标签\r\n            if(startTagMatch){\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue; // 如果开始标签匹配完毕后 继续下一次匹配\r\n            }\r\n            \r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch){\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        // 去掉空格 和文本内容\r\n        if(textEnd>=0){\r\n            text = html.substring(0,textEnd)\r\n        }\r\n        // 有可能有文本\r\n        if(text){\r\n            advance(text.length)\r\n            chars(text)\r\n            // break\r\n        }   \r\n\r\n    }\r\n    // 解析标签 解析一个一个删掉前面的 比如 <div id=\"app\"></div> 匹配到<div 然后就删掉 直到全部没有为止\r\n    // 清理所有剩余标签\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    // 解析开始标签 上的内容 和属性 因为只有开始标签采用属性\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n\r\n            advance(start[0].length) // 将标签删除\r\n            // console.log(html)\r\n            let end, attr;\r\n            // console.log('html.match(startTagClose)',html.match(startTagClose))\r\n            // console.log('html.match(attribute)',html.match(attribute))\r\n            // 将属性解析\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length) // 将属性去掉\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if(end){ // 去掉开始标签的>\r\n                advance(end[0].length) // 将属性去掉\r\n                return match\r\n            }\r\n            // console.log('sss',end)\r\n        }\r\n\r\n    }\r\n\r\n    return root\r\n}\r\n","import {parseHTML} from './parse-html'\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\r\n    let str = '';\r\n    for(let i=0;i<attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attrs.name ==='style'){\r\n            // style=\"color:red;fontSize:14px\"=>{style:{color:'red'},id:name}\r\n            let obj ={}\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\nfunction genChildren(el){\r\n    let children = el.children;\r\n    if(children&&children.length>0){\r\n        return `${children.map(c=>gen(c)).join(',')}`\r\n    }else{\r\n        return false\r\n    }\r\n}\r\nfunction gen(node){\r\n    if(node.type===1){\r\n        // 元素标签\r\n        return generate(node)\r\n    }else{\r\n        let text = node.text; // a {{name}} b{{age}} c\r\n        let tokens = [];\r\n        let match,index;\r\n        let lastIndex = defaultTagRE.lastIndex=0\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index\r\n            if(index>lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n            }\r\n            // console.log(match)\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastIndex = index+match[0].length;\r\n        }\r\n        if(lastIndex<text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n\r\n        // _v(\"a\"+_s(name)+\"b\"+_s(age)+'c')\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\n\r\nfunction generate(el){ // [name:\"id\",value:'app',{}] {id:app,a:1,b:2}\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tag}\",${\r\n        el.attrs.length?genProps(el.attrs):'undefined'\r\n    }${children?`,${children}`:''})\r\n\r\n    `\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1、解析html字符串 将html字符串=>ast语法树\r\n    let root = parseHTML(template)\r\n\r\n\r\n    let code = generate(root)\r\n    console.log(code)\r\n\r\n    // 核心思路就是将模板转化成 下面这段字符串\r\n    // 2.需要将ast 语法树生成最终的render函数 就是字符串拼接  （模板引擎）\r\n    // <div id=\"app\"><p>hello {{name}}</p>hello</div>\r\n    // 将ast树 再次转换成js的语法\r\n    // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello+_s(name))),_v('hello'))\r\n    // console.log(root)\r\n\r\n    // 所有的模板引擎实现 都需要new Function + with\r\n    \r\n    let renderFn = new Function(`with(this) {return ${code}}`)\r\n\r\n\r\n    // vue 的render 他返回的是虚拟dom\r\n    return function render() {\r\n\r\n    }\r\n}\r\n\r\n\r\n/* <div>\r\n    <p></p>\r\n</div> */\r\n\r\n// let root = {\r\n//     tag:'div',\r\n//     attrs:[{name:'id',value:'app'}],\r\n//     parent:null,\r\n//     type:1,\r\n//     children:[{\r\n//         tag:'div',\r\n//         attrs:[{name:'id',value:'app'}],\r\n//         parent:null,\r\n//         type:13\r\n//     }]\r\n// }","export function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function () {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent(vm,el){\r\n    const options = vm.$options ; // render\r\n    vm.$el = el; // 真实的dom元素\r\n\r\n    // Watcher 就是用来渲染的\r\n    // vm._render 通过解析的render方法 渲染出虚拟dom\r\n    // vm._update 通过虚拟dom 创建真实的dom\r\n\r\n    // 渲染页面\r\n    let updateComponent = ()=>{ // 无论是渲染还是更新都会调用此方法\r\n        // vm._render() 返回的是虚拟dom // vm._update创建真实节点 去更新页面\r\n        vm._update(vm._render())\r\n\r\n    }\r\n    // 渲染watcher 每个组件都有一个watcher vm.$watch(()=>)\r\n    new Watcher(vm,updateComponent,()=>{},true) // true 表示他是一个渲染watcher\r\n}\r\n","// 在原型上添加一个init 方法\r\nimport {initState} from \"./state\"\r\nimport {compileToFunction} from './compiler/index'\r\nimport {mountComponent} from './lifecycle'\r\nexport function initMixin(Vue){\r\n    // 初始化流程\r\n    Vue.prototype._init = function(options){\r\n        // 数据的劫持\r\n        const vm = this; //vue中使用this.options 指代的就是用户传递的属性\r\n        vm.$options = options\r\n\r\n        // 初始化状态\r\n        initState(vm) // 分割代码\r\n\r\n\r\n        // 如果用户传入传入了el属性 需要将页面渲染出来\r\n        // 如果用户传入了el 就要实现挂载流程\r\n\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el){\r\n        const vm = this;\r\n        const options = vm.$options\r\n        el = document.querySelector(el)\r\n\r\n        // 默认先会查找有没有render方法，没有render 会采用template template 也没有就用el中的内容\r\n        if(!options.render){\r\n            // 对模板进行编译\r\n            let template = options.template //取出模板\r\n            if(!template&&el){\r\n                template = el.outerHTML\r\n            }\r\n            const render = compileToFunction(template)\r\n            options.render = render\r\n        }\r\n\r\n        // 渲染当前的组件 挂载这个组件 \r\n        mountComponent(vm,el)\r\n\r\n    }\r\n}","export function renderMixin(Vue) {\r\n    // _c 创建元素的虚拟节点\r\n    // _v 创建文本的虚拟节点\r\n    // _s JSON.stringfy\r\n\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments) // tag,data,children1,children2\r\n    }\r\n\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(text)\r\n    }\r\n\r\n    Vue.prototype._s = function (val) {\r\n        return val===null?'':(typeof val==='object'?JSON.stringify(val):val)\r\n    }\r\n}\r\n"," import {initMixin} from './init'\r\n import {renderMixin} from './render'\r\n function Vue(options){\r\n    // 进行vue的初始化操作\r\n    this._init(options)\r\n}\r\n// 通过引入文件的方式 给Vue 原型上添加方法\r\ninitMixin(Vue)  // 给Vue原型上添加一个_init方法\r\nrenderMixin(Vue) //\r\nexport default Vue\r\n"],"names":["isObject","data","proxy","vm","source","key","Object","defineProperty","get","set","newValue","def","value","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","initState","opts","$options","props","initData","computed","watch","console","log","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","ELMENT_TYPE","TEXT_TYPE","stack","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","render","mountComponent","options","$el","updateComponent","_update","_render","Watcher","initMixin","Vue","_init","$mount","document","querySelector","outerHTML","renderMixin","_c","createElement","arguments","_v","createTextNode","_s","val"],"mappings":"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"}